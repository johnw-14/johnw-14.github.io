knitr::opts_knit$set(base.dir = "/Users/whele/Documents/johnw-14.github.io/docs/", base.url = "/")
knitr::opts_chunk$set(fig.path = "images/")
library(tidyverse)
library(rgdal)
library(rgeos)
library(maptools)
library(leaflet)
library(htmlwidgets)
library(here)
ChicagoPD_data <-
read.csv("C:\\Users\\whele\\OneDrive\\Documents\\ChicagoPD\\Strategic_Subject_List_-_Historical.csv")
tract <- readOGR(dsn="illinois_tracts_2016_17", layer = "cb_2016_17_tract_500k")
tract@data$TRACTCE <- as.character(tract@data$TRACTCE)
plot(tract)
ggtract <- fortify(tract, region = "GEOID")
SSL_data_by_tract <- ChicagoPD_data %>%
group_by(CENSUS.TRACT) %>%
summarise(count = n(), meanSSL = mean(SSL.SCORE))
SSL_data_by_tract$CENSUS.TRACT <- as.character(SSL_data_by_tract$CENSUS.TRACT)
SSL_tract_join <- left_join(ggtract, SSL_data_by_tract, by = c("id" = "CENSUS.TRACT"), copy = TRUE)
ggSSLtract <- SSL_tract_join %>%
filter(!is.na(count))
ggplot() + geom_polygon(data = ggSSLtract, aes(x = long, y = lat, group = group, fill = meanSSL)) + scale_fill_gradient2(low = "deepskyblue2", mid = "white", high = "firebrick1", midpoint = 280)
df.polygon2 <- tract
df.polygon2@data$rec <- 1:nrow(df.polygon2@data)
tmp <- left_join(df.polygon2@data, SSL_data_by_tract, by = c("GEOID" = "CENSUS.TRACT"), copy = TRUE) %>%
arrange(rec)
df.polygon2@data <- tmp
df.polygon2 <- df.polygon2[!is.na(df.polygon2$count),]
popup <- paste0("GEOID: ", df.polygon2$GEOID, "<br>", "Count of Arrests: ", df.polygon2$count, "<br>", "Mean SSL Score: ", round(df.polygon2$meanSSL))
pal <- colorNumeric(
palette = "YlGnBu",
domain = df.polygon2$meanSSL
)
map2<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = df.polygon2,
fillColor = ~pal(meanSSL),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = df.polygon2$meanSSL,
position = "bottomright",
title = "Mean SSL Score")
map2
saveWidget(here::here('/html', 'leaflet-SSL-map1'))
popup <- paste0("GEOID: ", df.polygon2$GEOID, "<br>", "Count of Arrests: ", df.polygon2$count, "<br>", "Mean SSL Score: ", round(df.polygon2$meanSSL))
pal <- colorNumeric(
palette = "YlGnBu",
domain = df.polygon2$meanSSL
)
map2<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = df.polygon2,
fillColor = ~pal(meanSSL),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = df.polygon2$meanSSL,
position = "bottomright",
title = "Mean SSL Score")
map2
saveWidget(here::here('/html', 'leaflet-SSL-map1.html'))
popup <- paste0("GEOID: ", df.polygon2$GEOID, "<br>", "Count of Arrests: ", df.polygon2$count, "<br>", "Mean SSL Score: ", round(df.polygon2$meanSSL))
pal <- colorNumeric(
palette = "YlGnBu",
domain = df.polygon2$meanSSL
)
map2<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = df.polygon2,
fillColor = ~pal(meanSSL),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = df.polygon2$meanSSL,
position = "bottomright",
title = "Mean SSL Score")
saveWidget(here::here('/html', 'leaflet-SSL-map1.html'))
popup <- paste0("GEOID: ", df.polygon2$GEOID, "<br>", "Count of Arrests: ", df.polygon2$count, "<br>", "Mean SSL Score: ", round(df.polygon2$meanSSL))
pal <- colorNumeric(
palette = "YlGnBu",
domain = df.polygon2$meanSSL
)
map2<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = df.polygon2,
fillColor = ~pal(meanSSL),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = df.polygon2$meanSSL,
position = "bottomright",
title = "Mean SSL Score") %>%
saveWidget(here::here('/html', 'leaflet-SSL-map1.html'))
popup <- paste0("GEOID: ", df.polygon2$GEOID, "<br>", "Count of Arrests: ", df.polygon2$count, "<br>", "Mean SSL Score: ", round(df.polygon2$meanSSL))
pal <- colorNumeric(
palette = "YlGnBu",
domain = df.polygon2$meanSSL
)
map2<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = df.polygon2,
fillColor = ~pal(meanSSL),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = df.polygon2$meanSSL,
position = "bottomright",
title = "Mean SSL Score") %>%
saveWidget(here::here('/docs/html', 'leaflet-SSL-map1.html'))
popup <- paste0("GEOID: ", df.polygon2$GEOID, "<br>", "Count of Arrests: ", df.polygon2$count, "<br>", "Mean SSL Score: ", round(df.polygon2$meanSSL))
pal <- colorNumeric(
palette = "YlGnBu",
domain = df.polygon2$meanSSL
)
map2<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = df.polygon2,
fillColor = ~pal(meanSSL),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = df.polygon2$meanSSL,
position = "bottomright",
title = "Mean SSL Score") %>%
saveWidget(here::here('/html', 'leaflet-SSL-map1.html'))
popup <- paste0("GEOID: ", df.polygon2$GEOID, "<br>", "Count of Arrests: ", df.polygon2$count, "<br>", "Mean SSL Score: ", round(df.polygon2$meanSSL))
pal <- colorNumeric(
palette = "YlGnBu",
domain = df.polygon2$meanSSL
)
map2<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = df.polygon2,
fillColor = ~pal(meanSSL),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = df.polygon2$meanSSL,
position = "bottomright",
title = "Mean SSL Score") %>%
saveWidget(here('/html', 'leaflet-SSL-map1.html'))
popup <- paste0("GEOID: ", df.polygon2$GEOID, "<br>", "Count of Arrests: ", df.polygon2$count, "<br>", "Mean SSL Score: ", round(df.polygon2$meanSSL))
pal <- colorNumeric(
palette = "YlGnBu",
domain = df.polygon2$meanSSL
)
map2<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = df.polygon2,
fillColor = ~pal(meanSSL),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = df.polygon2$meanSSL,
position = "bottomright",
title = "Mean SSL Score") %>%
saveWidget(here::here('/html', 'leaflet-SSL-map1.html'))
popup <- paste0("GEOID: ", df.polygon2$GEOID, "<br>", "Count of Arrests: ", df.polygon2$count, "<br>", "Mean SSL Score: ", round(df.polygon2$meanSSL))
pal <- colorNumeric(
palette = "YlGnBu",
domain = df.polygon2$meanSSL
)
map2<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = df.polygon2,
fillColor = ~pal(meanSSL),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = df.polygon2$meanSSL,
position = "bottomright",
title = "Mean SSL Score") %>%
saveWidget(here::here('/html', 'leaflet-SSL-map1.html'))
popup <- paste0("GEOID: ", df.polygon2$GEOID, "<br>", "Count of Arrests: ", df.polygon2$count, "<br>", "Mean SSL Score: ", round(df.polygon2$meanSSL))
pal <- colorNumeric(
palette = "YlGnBu",
domain = df.polygon2$meanSSL
)
map2<-leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = df.polygon2,
fillColor = ~pal(meanSSL),
color = "#b2aeae", # you need to use hex colors
fillOpacity = 0.7,
weight = 1,
smoothFactor = 0.2,
popup = popup) %>%
addLegend(pal = pal,
values = df.polygon2$meanSSL,
position = "bottomright",
title = "Mean SSL Score") %>%
saveWidget(here::here("html", "leaflet-SSL-map1.html"))
